apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: api
  namespace: prod
  labels: { app: api }
spec:
  replicas: 4
  strategy:
    canary:
      canaryService: api-canary
      stableService: api
      trafficRouting:
        istio:
          virtualService:
            name: api-vs
            routes:
            - primary
      steps:
      - setWeight: 10
      - pause: { duration: 60 }   # 1분 관찰
      - analysis:
          templates:
          - templateName: prom-http-5xx
          - templateName: prom-latency-p95
          args:
          - name: service
            value: "api"
      - setWeight: 30
      - pause: { duration: 120 }
      - analysis:
          templates:
          - templateName: prom-http-5xx
          - templateName: prom-latency-p95
          args:
          - name: service
            value: "api"
      - setWeight: 50
      - pause: { duration: 180 }
  selector:
    matchLabels: { app: api }
  template:
    metadata:
      labels: { app: api }
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: sa-prod-secrets
      containers:
      - name: api
        image: ghcr.io/example/starbucks-api:1.1.0
        ports: [{ name: http, containerPort: 8080 }]
        resources:
          requests: { cpu: "200m", memory: "256Mi" }
          limits:   { cpu: "500m", memory: "512Mi" }
        readinessProbe:
          httpGet: { path: /healthz, port: 8080 }
          periodSeconds: 5
        livenessProbe:
          httpGet: { path: /livez, port: 8080 }
          initialDelaySeconds: 20
